name: Test Micromamba

on:
  pull_request:
  push:
    branches:
      - main
      - tests

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build-installer:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos]
    name: Micromamba, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    env:
      MICROMAMBA_VERSION: 2.0.8
      MICROMAMBA_BUILD: 0
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683       # v4.2.2

      - name: Download micromamba
        uses: mamba-org/setup-micromamba@0dea6379afdaffa5d528b3d1dabc45da37f443fc  # v2.0.4
        with:
          init-shell: none
          micromamba-version: ${{ env.MICROMAMBA_VERSION }}-${{ env.MICROMAMBA_BUILD }}

      - name: Create installer
        id: create-installer
        uses: ./
        with:
          environment-yaml-string: |
            channels:
              - conda-forge
            dependencies:
              - constructor
            variables:
              ${{ matrix.os == 'macos' && 'CONDA_OVERRIDE_OSX: 11.0' || '' }}
              ${{ matrix.os == 'ubuntu' && 'CONDA_OVERRIDE_GLIBC: 2.17' || '' }}
          standalone-location: ${{ env.MAMBA_EXE }}
          recipe-directory: recipes/micromamba

      - name: Upload installer to Github artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02       # v4.6.2
        with:
          path: ${{ steps.create-installer.outputs.artifacts-directory }}/*
          name: test-micromamba-${{ matrix.os }}
          retention-days: 5

      - name: Determine installer file name
        id: installer-file
        run: |
          INSTALLER_FILE=$(find "${{ steps.create-installer.outputs.artifacts-directory }}" -name "*.sh" | head -n 1)
          echo "installer-file=${INSTALLER_FILE}" >> ${GITHUB_OUTPUT}
        shell: bash

      - name: Verify hashes
        env:
          ARTIFACTS_DIRECTORY: ${{ steps.create-installer.outputs.artifacts-directory }}
          INSTALLER_FILE: ${{ steps.installer-file.outputs.installer-file }}
        run: |
          UNAME=$(uname)
          [[ "${UNAME}" == "Darwin" ]] && SHACMD="shasum -a 256" || SHACMD=sha256sum
          cd ${ARTIFACTS_DIRECTORY}
          ${SHACMD} -c "${INSTALLER_FILE}.sha256"
        shell: bash

      - name: Run installer
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830       # v3.1.1
        with:
          activate-environment: ''
          installation-dir: ${{ runner.temp }}/installer_test
          installer-url: file://${{ steps.installer-file.outputs.installer-file }}

      - name: Test installer
        env:
          INSTALL_DIR: ${{ runner.temp }}/installer_test
        run: |
          . ${CONDA}/etc/profile.d/conda.sh
          conda activate
          conda info --json | python -c "import json, os, sys; from pathlib import Path; info = json.loads(sys.stdin.read()); assert Path(os.environ.get('INSTALL_DIR', '')) == Path(info['root_prefix'])"
          conda config --show --json | python -c "import sys, json; info = json.loads(sys.stdin.read()); assert 'conda-forge' in info['channels']"
          test "$(${CONDA}/_conda --version)" == "${MICROMAMBA_VERSION}"
        shell: bash
